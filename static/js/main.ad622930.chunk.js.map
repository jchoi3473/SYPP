{"version":3,"sources":["redux/categories-reducer/categoriesAction.js","redux/addApp-reducer/addAppAction.js","components/chip/ChipAutocomplete.js","components/scroll/Scroll.js","components/addApp/RoleLocationAdd.js","components/radio/RadioButtons.js","components/addApp/Applied.js","components/addApp/CompanyPositionAdd.js","components/calendar/CalendarComponent.js","components/addApp/InterviewDate.js","components/page/Page.js","redux/progress-reducer/progressAction.js","components/addApp/UserForm.js","components/addApp/ModalBox.js","redux/filteredProgress-reducer/filteredProgressAction.js","main_applications/ApplicationListComponents.js","components/newTask/NextStep.js","components/newTask/NewDate.js","components/newTask/NewTask.js","components/progress/ProgressBar.js","main_applications/ApplicationListProgress.js","main_applications/ApplicationList.js","main_applications_components/ApplicationDetailContacts.js","main_applications/ApplicationDetailComponents.js","redux/applicationDetail-reducer/ApplicationDetailAction.js","main_applications/ApplicationDetail.js","main_applications/Applications.js","main/MainPage.js","App.js","redux/addApp-reducer/addAppReducer.js","redux/categories-reducer/categoriesReducer.js","redux/progress-reducer/progressReducer.js","redux/filteredProgress-reducer/filteredProgressReducer.js","redux/applicationDetail-reducer/ApplicationDetailReducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["setCategories","categories","type","payload","setSelectedCategories","setDates","dates","ChipInput","withStyles","root","padding","margin","MuiButtonBase","inputRoot","flexWrap","fontSize","minWidth","color","boxSizing","chipContainer","display","flexFlow","cursor","width","marginBottom","minHeight","marginTop","chip","height","MuiChipInput","Accordion","border","backgroundColor","boxShadow","expanded","MuiAccordion","AccordionSummary","content","focused","MuiAccordionSummary","AccordionDetails","theme","MuiAccordionDetails","ChipAutocomplete","props","onClick","e","newSelectedCategory","selectedCategories","i","length","Type","name","SuggestionsOrSeleceted","concat","currentTarget","innerText","setState","activeSuggestion","filteredSuggestions","showSuggestions","userInput","newSuggestion","handleSuggestion","index","state","onChange","suggestions","value","filter","suggestion","toLowerCase","indexOf","handleDeleteTags","tag","delectedCategory","boolTest","map","category","onClickAccordion","handleAccordion","disableEvents","wrapperStyle","suggestionsListComponent","this","onKeyDown","class","key","accordion","TransitionProps","timeout","className","placeholder","onDelete","onUpdateInput","disableUnderline","fullWidthInput","fullWidth","disabled","Component","defaultProperty","connect","addApp","Categories","dispatch","Scroll","style","overflowY","children","RoleLocationAdd","continue","preventDefault","nextStep","back","prevStep","handleClose","show","handleShow","handleSave","input","newCategory","newSelectCategory","data","Modal","onHide","centered","dialogClassName","RadioButtons","useState","radioValue","setRadioValue","radios","options","radioChange","ButtonGroup","toggle","classContainerProps","radio","idx","isDisabled","ToggleButton","buttonContainerProps","variant","checked","Applied","contained","MuiButton","option","boolean","newDates","completed","date","CompanyPositionAdd","onCompanyChange","companyName","onPositionChange","positionName","applicationDetail","event","target","CalendarComponent","Date","calendarChange","tileClassName","InterviewDate","onChangeDate","showDate","console","log","Page","pageCount","pageNumber","setApps","apps","requestProgress","fetch","then","res","json","catch","error","UserForm","step","onSaveButton","a","postNewApp","setTimeout","onRequestProgress","app","method","headers","body","JSON","stringify","_id","applicationID","uID","authID","Tasks","midTaskID","Time","Title","Status","Detail","CompanyName","PositionName","IsFavorite","pinned","companyID","positionID","response","useStyles","makeStyles","spacing","extendedIcon","marginRight","ModalBox","setShow","classes","Fab","size","updateFilteredProgress","progress","applications","filteredProgress","updateFilteredProgressTitle","title","updateButtonValue","updateFilteredProgressButtonValue","selectedButtonValue","targetName","setTargetName","targetValue","setTargetValue","toolTip","setToolTip","selectedTitle","setTargetTitle","onClickButton","getAttribute","filterProgress","filtered","j","k","data-for","data-tip","onMouseEnter","handleChange","id","effect","delayHide","place","disable","temp","includes","entity","categoryDivided","NextStep","onUserInput","onChangeOption","NewDate","onInterviewOptionChange","NewTask","onChangeOptions","onClickSave","ProgressBar","handleCompleted","dateShow","onClickAdd","sortedDates","sort","b","Moment","format","undefined","Progress","onClickIsFavorite","onSearchChange","searchField","searchFilteredProgress","application","applicationName","stop","initialRating","emptySymbol","fullSymbol","toApplicationDetail","applied","postProgress","MainPage","push","ApplicationListComponents","ApplicationListProgress","contact","PersonalDetail","Firstname","Lastname","Company","Email","Phone","PhoneNumber","pending","isPending","radioName","setRadioName","textValue","setTextValue","onChangeTextArea","Contacts","updateApplicationDetail","ApplicationDetail","selectedApplication","icon","faAngleLeft","toApplicationList","Applications","App","INITIAL_STATE","archived","addAppReducer","action","interviewDate","Object","assign","categoriesReducer","progressReducer","filteredProgressReducer","ApplicationDetailReducer","combineReducers","applicationDetailReducer","middlewares","logger","thunk","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad622930.chunk.js","sourcesContent":["\n\n export const setCategories = (categories) => ({\n    type: 'SET_CATEGORIES',\n    payload: categories\n});  \n","import AddAppTypes from './addAppTypes'\n\n\n//\n\nexport const setCompanyName = companyName => ({\n    type: 'SET_COMPANY_NAME',\n    payload: companyName\n});\n\nexport const setPositionName = positionName => ({\n    type: 'SET_POSITION_NAME',\n    payload: positionName\n});  \n\nexport const setSelectedCategories = (categories) => ({\n    type: 'SET_SELECTED_CATEGORIES',\n    payload: categories\n});  \n\nexport const setDates = (dates) => ({\n    type: 'SET_DATES',\n    payload: dates\n});  \n\nexport const setInterviewDate = (interviewDate) => ({\n    type: 'SET_INTERVIEW_DATE',\n    payload: interviewDate\n});  \n\n\n\n\nexport const postNewApp = (app) => (dispatch) =>{\n    dispatch({type: 'POST_NEWAPP_PENDING'});\n    // fetch('http://teamdevelopmentserver.azurewebsites.net/applications/create', {\n    fetch('http://localhost:3000/newapp', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        // applicationDetail: app.applicationDetail,\n        _id: null,\n        applicationID: null,\n        uID: null,\n        authID: null,\n        Tasks:[\n        {\n            midTaskID: null,\n            Time: app.dates[0].date,\n            Title: \"Applied\",\n            Status: app.dates[0].completed,\n            showDate: app.dates[0].showDate\n        }\n        ],\n        Detail:{\n            applicationID: null,\n            uID: null,\n            CompanyName: app.applicationDetail.companyName,\n            PositionName: app.applicationDetail.positionName,\n            IsFavorite: app.applicationDetail.pinned,\n            companyID: null,\n            positionID: null,\n            Status: null,\n            Categories: app.Categories\n        },       \n      })\n    })\n    .then(response => console.log(response.json()))\n    .then(() => dispatch({\n            type: 'POST_NEWAPP_SUCCESS',\n        })\n    )\n    .catch(error => dispatch({\n        type: 'POST_NEWAPP_FAILED',\n        payload: error\n    }))\n}\n","import React, { Component, useState } from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport './ChipAutocomplete.css';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiAccordion from '@material-ui/core/Accordion';\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\nimport MuiButtonBase from '@material-ui/core/ButtonBase';\nimport MuiChipInput from 'material-ui-chip-input'\n\nimport {connect} from 'react-redux'\nimport { setCategories } from '../../redux/categories-reducer/categoriesAction';\nimport { setSelectedCategories } from '../../redux/addApp-reducer/addAppAction';\n\n\n\nconst ButtonBase = withStyles({\n  root: {\n    padding: '0px',\n    margin: '0px'\n  },\n})(MuiButtonBase);\n\nconst ChipInput = withStyles({\n  inputRoot: {\n    flexWrap: 'wrap',\n    fontSize :'5',\n    minWidth: 50,\n    color: \"white\",\n    '&$outlined,&$filled': {\n      boxSizing: 'border-box'\n    },\n  },\n  chipContainer: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n    cursor: 'text',\n    width: '100%' ,\n    marginBottom: -2,\n    minHeight: 30,\n    '&$labeled&$standard': {\n      marginTop: 5\n    }\n  },\n  chip:{\n    marginTop: '5px',\n    marginBottom:'3px',\n    fontSize : '10px',\n    height : '20px'\n  },\n})(MuiChipInput);\n\nconst Accordion = withStyles({\n  root: {\n    minHeight: '0',\n    margin: 0,\n    padding: 0,\n    border: '0px solid rgba(0, 0, 0, 0)',\n    backgroundColor: 'transparent',\n    boxShadow: 'none',\n    '&$expanded': {\n      margin: '0px 0',\n    },\n  },\n  expanded: {},\n})(MuiAccordion);\n\nconst AccordionSummary = withStyles({\n  root: {\n    display: 'block',\n    margin: '0px 0',\n    backgroundColor: 'transparent',\n    '&$expanded': {\n      margin: '0px 0',\n      minHeight: 0,\n    },\n  },\n  content: {\n    '&$expanded': {\n      backgroundColor: 'rgba(0, 0, 0, 0)',\n      margin: '5px 0px'\n    },\n  },\n  expanded: {},\n  focused: {    \n    '&$focused': {\n    backgroundColor: 'transparent',\n    },\n  },\n})(MuiAccordionSummary);\n\nconst AccordionDetails = withStyles((theme) => ({\n  root: {\n    padding: 0,\n    marginTop: 1\n  },\n}))(MuiAccordionDetails);\n\nexport class ChipAutocomplete extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: '',\n    };\n  }\n  \n  onClick = (e) => {\n    const newSelectedCategory = this.props.selectedCategories\n    for (var i =0;i<newSelectedCategory.length;i++){\n      if(newSelectedCategory[i].Type === this.props.name){\n        newSelectedCategory[i].SuggestionsOrSeleceted = newSelectedCategory[i].SuggestionsOrSeleceted.concat(e.currentTarget.innerText)\n      }\n    }\n    // newSelectedCategory[this.props.index].selectedCategory = newSelectedCategory[this.props.index].selectedCategory.concat(e.currentTarget.innerText)\n    this.props.setSelectedCategories(newSelectedCategory)\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: '',\n    });\n  };\n\n  newSuggestion = e => {\n    this.handleSuggestion(this.props.index, this.state.userInput);\n    const newSelectedCategory = this.props.selectedCategories\n    for (var i =0;i<newSelectedCategory.length;i++){\n      if(newSelectedCategory[i].Type === this.props.name){\n        newSelectedCategory[i].SuggestionsOrSeleceted = newSelectedCategory[i].SuggestionsOrSeleceted.concat(this.state.userInput)\n      }\n    }\n     \n    // newSelectedCategory[this.props.index].selectedCategory = newSelectedCategory[this.props.index].selectedCategory.concat(this.state.userInput)\n    this.props.setSelectedCategories(newSelectedCategory)\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: '',\n    });  }\n\n\n\n  onChange = (e) => {\n    const { suggestions } = this.props.categories[this.props.index];\n    const userInput = e.currentTarget.value;\n    const filteredSuggestions = suggestions.filter(\n      (suggestion) =>\n        suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n    );\n\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions,\n      showSuggestions: true,\n      userInput: e.currentTarget.value,\n    });\n  };\n\n  handleDeleteTags = tag => {\n    const delectedCategory = this.props.selectedCategories[this.props.index].SuggestionsOrSeleceted.filter(state => state !== tag)\n    const newSelectedCategory = this.props.selectedCategories\n    for (var i =0;i<newSelectedCategory.length;i++){\n      if(newSelectedCategory[i].name === this.props.name){\n        newSelectedCategory[i].SuggestionsOrSeleceted = delectedCategory\n      }\n    }\n    this.props.setSelectedCategories(newSelectedCategory)\n    this.setState({})\n  };\n\n  handleSuggestion = (index, newSuggestion) => {\n    var boolTest = true\n    this.props.categories[index].suggestions.map((suggestion) => {\n        if(newSuggestion == suggestion){\n            boolTest = false;\n        }\n    })\n    if(boolTest){\n        const {categories} = {...this.props}\n        const category = categories;\n        category[index].suggestions = this.props.categories[index].suggestions.concat(newSuggestion)\n        this.props.setCategories(category)\n    }\n  }\n\n  onClickAccordion = (e) => {\n    this.props.handleAccordion(this.props.index)\n  }\n\n  static defaultProperty={\n    suggestions: []\n  };\n  disableEvents = true;\n\n  /* Dynamically compute style for wrapper components \n      to control mouse interactivity */\n  wrapperStyle = e => { \n  };\n\n  render(){\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n      state: {\n        activeSuggestion,\n        filteredSuggestions,\n        showSuggestions,\n        userInput,\n        chip\n      }\n    } = this;\n    let suggestionsListComponent;\n      if (showSuggestions && userInput) {\n        if (filteredSuggestions.length) {\n          suggestionsListComponent = (\n            <ul>\n              {filteredSuggestions.map((suggestion, index) => {\n                return (\n                  <button class =\"suggestion chipbutton\" key={suggestion} onClick={onClick}>\n                    {suggestion}\n                  </button>\n                );\n              })}\n            </ul>\n          );\n        } \n      }\n\n    return (\n      <div>\n        <Accordion expanded = {this.props.accordion} \n        TransitionProps={{\n          timeout: 600\n        }}>\n          <AccordionSummary>\n            <div className = \"accoridon-container\">\n                <div className = 'label-container'>\n                  <div className=\"label-text\">{this.props.name}</div>\n                </div>\n                <div className =\"border\" onClick = {this.onClickAccordion}>\n                    <ChipInput\n                    value={this.props.selectedCategories[this.props.selectedCategories.map(\n                      function(e){\n                        return e.Type\n                    }).indexOf(this.props.name)].SuggestionsOrSeleceted}\n                    placeholder=\"Assign Tag\"\n                    onDelete={(tag, index) => this.handleDeleteTags(tag, index)}\n                    onUpdateInput={this.onChange}\n                    disableUnderline = {true}\n                    fullWidthInput = {false}\n                    fullWidth = {false}\n                    />\n                </div>\n            </div>\n            </AccordionSummary>\n            <AccordionDetails>\n                <div className = \"container-suggestion\">\n                {suggestionsListComponent}\n                <button className = \"suggestion\" \n                  onClick={this.newSuggestion}\n                  disabled = {this.state.userInput.length<1}\n                >Create</button>\n                </div>\n            </AccordionDetails>\n        </Accordion>\n      </div>\n    );\n  };\n}\n\n\nconst mapStatetoProps = state => {\n  return{\n      categories: state.categories.categories,\n      selectedCategories: state.addApp.Categories\n  }\n}\nconst mapDispatchToProps= dispatch =>{\n  return {\n    setCategories: (category) => dispatch(setCategories(category)),   \n    setSelectedCategories: (category) => dispatch(setSelectedCategories(category))\n  }\n}\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(ChipAutocomplete);\n\n","import React from 'react';\n\nconst Scroll = (props) =>{\n    return (\n        <div style={{overflowY: 'scroll', height: '160px'}}>\n            {props.children}\n        </div>\n    )\n};\n\nexport default Scroll;\n","import React, {Component} from 'react';\nimport ChipAutocomplete from '../chip/ChipAutocomplete'\nimport './Modalbox.css';\nimport Modal from 'react-bootstrap/Modal';\nimport Scroll from '../scroll/Scroll'\n\nimport {connect} from 'react-redux'\nimport { setSelectedCategories } from '../../redux/addApp-reducer/addAppAction';\nimport { setCategories } from '../../redux/categories-reducer/categoriesAction';\n\n\n//Make independent server call here. Need to save these properties globally\n\nexport class RoleLocationAdd extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            userInput : '',\n            show : false,\n        };\n    }\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n        \n        const category =  this.props.categories;\n        for(var i=0;i<category.length;i++){\n                category[i].accordion = false;\n        }\n        this.props.setCategories(category)\n    };\n    back = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    };\n    handleClose = () => {\n        this.setState({show: false});\n    }\n    handleShow = () => {\n        this.setState({show: true});\n    }\n    onChange = (e) =>{\n        this.setState({\n            userInput: e.currentTarget.value\n        })\n    }\n    onClick = () => {\n        this.handleSave(this.state.userInput)\n        this.setState({\n            show:false\n        })\n    }\n\n    handleSave = (input) =>{\n        const index = this.props.categories.length\n        const {categories} = {...this.props}\n        const category = categories\n        for(var i=0;i<category.length;i++){\n            category[i].accordion = false;\n            this.props.setCategories(category)\n        }\n        const newCategory = this.props.categories.concat({\n            index: index,\n            name: input,\n            suggestions : [],\n            accordion : true,\n        })\n        const newSelectCategory = this.props.selectedCategories.concat({\n            Type: input,\n            SuggestionsOrSeleceted : []\n        })\n        this.props.setSelectedCategories(newSelectCategory)\n        this.props.setCategories(newCategory)\n        this.setState({})\n    }\n\n    \n    handleAccordion = (index) => {\n        const category =  this.props.categories;\n        if(category[index].accordion == false){\n            category[index].accordion = true;\n        }\n        for(var i=0;i<category.length;i++){\n            if(index != category[i].index){\n                category[i].accordion = false;\n    \n            }\n            this.props.setCategories(category)\n        }\n        this.setState({})\n    }\n\n\n    render(){\n        return(\n            <div>\n                <div className =\"category-container\">\n                    <div className=\"modal-text\">Let's categorize this applicaiton!</div>\n                    <div className=\"modal-text\">Feel free to leave categories empty if desired!</div>\n                    <Scroll className = \"scroll\">\n                    {   \n                        this.props.categories.map((data) => (\n                        <div>\n                            <ChipAutocomplete\n                            className =\"modal-input position\"\n                            name = {data.name}\n                            key = {data.index}\n                            index = {data.index}\n                            accordion = {data.accordion}\n                            handleAccordion = {this.handleAccordion}\n                        />\n                        </div>\n                        ))\n                    }\n                    <button className =\"create-category\" onClick = {this.handleShow}>\n                        + New Category\n                    </button>\n                    </Scroll>\n                </div>\n                <Modal \n                    show={this.state.show}\n                    onHide={this.handleClose}\n                    centered\n                    dialogClassName = \"Modal-Category\"\n                >\n                    <div className =\"submodal-container\">\n                        <div className=\"modal-text\">What's your new category?</div>\n                        <input \n                        className =\"modal-input newCategory\"\n                        placeholder = \"Category Name\"\n                        value={this.state.userInput}\n                        onChange = {this.onChange}\n                        />\n                        <div className=\"next-button-container\">\n                            <button className =\"button-next\" \n                            onClick = {this.onClick}\n                            disabled = {this.state.userInput.length<1}>\n                                Save\n                            </button>\n                        </div>\n                    </div>\n                </Modal>\n\n                <div className = \"next-button-container\">\n                <button className = \"button-prev\" onClick = {this.back}>\n                    Prev\n                </button>\n                <button className =\"button-next\" onClick = {this.continue}>\n                    Next\n                </button>\n                </div>\n                \n        </div>\n        );\n    }\n}\n\nconst mapStatetoProps = state => {\n    return{\n        categories: state.categories.categories,\n        selectedCategories: state.addApp.Categories\n    }\n}\nconst mapDispatchToProps= dispatch =>{\n    return {\n      setCategories: (category) => dispatch(setCategories(category)),   \n      setSelectedCategories: (category) => dispatch(setSelectedCategories(category))\n    }\n  }\n  \nexport default connect(mapStatetoProps,mapDispatchToProps)(RoleLocationAdd)","import React, { Component, useState } from 'react';\nimport Button from 'react-bootstrap/Button'\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport './RadioButtons.css';\n\n\n\nfunction RadioButtons(props) {\n    const [checked, setChecked] = useState(false);\n    const [radioValue, setRadioValue] = useState('1');\n    const radios = props.options;\n\n    const radioChange = (e) => {\n      e.preventDefault();\n      props.onChange(e.currentTarget.value);\n      setRadioValue(e.currentTarget.value)\n    }\n\n    return (\n        <ButtonGroup toggle className = {props.classContainerProps}>\n          {radios.map((radio, idx) => (\n              <div className=\"button-container button-towButtons-container\">\n                {props.isDisabled?\n                <ToggleButton\n                className={\"colorChange activeChange hoverChange text1 twoButtons \" + props.buttonContainerProps}\n                key={idx}\n                type=\"radio\"\n                variant=\"secondary\"\n                name=\"radio\"\n                value={radio.value}\n                checked={radioValue === radio.value}\n                onChange={(e) => radioChange(e, radioValue)}\n                disabled\n                >\n                {radio.name}\n                </ToggleButton>:\n                <ToggleButton\n                className={\"colorChange activeChange hoverChange text1 twoButtons \" + props.buttonContainerProps}\n                key={idx}\n                type=\"radio\"\n                variant=\"secondary\"\n                name=\"radio\"\n                value={radio.value}\n                checked={radioValue === radio.value}\n                onChange={(e) => radioChange(e, radioValue)}\n                >\n                {radio.name}\n                </ToggleButton>\n                }\n            </div>\n          ))}\n        </ButtonGroup>\n    );\n  }\n  export default RadioButtons;\n\n","import React, {Component} from 'react';\nimport './Modalbox.css';\nimport MuiButton from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core';\nimport RadioButtons from '../radio/RadioButtons'\n\nimport {connect} from 'react-redux'\nimport {setDates} from './../../redux/addApp-reducer/addAppAction'\n\n\n//{key : 1, date: new Date('2020-01-16'), showDate: true, completed: true},\n\nconst Button = withStyles({\n    contained: {\n        '&$focusVisible': {\n        //   boxShadow: theme.shadows[6],\n          backgroundColor: 'rgba(0, 0, 0, 0)'\n        },\n        '&:active': {\n            backgroundColor: 'rgba(0, 0, 0, 0)'\n        },\n        '&$focus': {\n            //   boxShadow: theme.shadows[6],\n              backgroundColor: 'rgba(0, 0, 0, 0)'\n        },\n      },\n})(MuiButton);\n\n\nexport class Applied extends Component{\n    state = {\n        option: ''\n        }\n\n    onChange = (value) => {\n        var boolean = true;\n        if (value == 1) {\n            boolean = true;\n        }\n        else{\n            boolean = false;\n        }\n        const newDates = this.props.dates\n        newDates[0].completed = boolean\n        this.props.setDates(newDates)\n    }\n    \n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    };\n    back = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    };\n\n    render(){\n        const radioValue =    \n            [ \n            { name: 'Yes', value: '1' },\n            { name: 'No', value: '2' },\n            ]\n        return(\n            <div>\n                <div className =\"applied-container\">\n                    <div className=\"modal-text\">Have you applied yet?</div>\n                    <div className = \"radio-container\">\n                    <RadioButtons options = {radioValue} onChange = {this.onChange} isDisabled = {false}/>\n                    </div>\n                </div>\n            <br/>\n            <div className =\"next-button-container\">\n                <button className = \"button-prev\" onClick = {this.back}>\n                    Prev\n                </button>\n                <button className =\"button-next\" onClick = {this.continue}>\n                    Next\n                </button>\n            </div>\n        </div>\n        );\n    }\n}\n\nconst mapStatetoProps = state => {\n    return{\n        dates: state.addApp.dates,\n    }\n  }\n  const mapDispatchToProps= dispatch =>{\n    return {\n      setDates: (date) => dispatch(setDates(date)),   \n    }\n  }\n\nexport default connect(mapStatetoProps,mapDispatchToProps)(Applied)\n//Add x button bootstrap or material-ui x ","import React, {Component} from 'react';\nimport { setCompanyName, setPositionName } from '../../redux/addApp-reducer/addAppAction';\nimport {connect} from 'react-redux'\nimport './Modalbox.css';\n\n\nexport class CompanyPositionAdd extends Component{\n\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    render(){\n        return(\n            <div>\n                    <div className=\"modal-text\">What company are you applying for?</div>\n                    <input\n                        className =\"modal-input company\"\n                        placeholder=\"Company Name\"\n                        onChange={this.props.onCompanyChange}\n                        value={this.props.companyName}\n                    />\n\n                    <br/>\n                    <div className=\"modal-text\">What position are you applying for?</div>\n                    <input\n                        className =\"modal-input position\"\n                        placeholder=\"Position Name\"\n                        onChange={this.props.onPositionChange}\n                        value={this.props.positionName}\n                    />\n                    <br/>\n\n                    <div className=\"next-button-container\">\n                     <button className =\"button-next\" onClick = {this.continue} disabled ={this.props.positionName === \"\" && this.props.companyName === \"\"?true:false}>\n                         Next\n                    </button>\n                    </div>\n            </div>\n           \n        );\n    }\n}\n\nconst mapStatetoProps = state => {\n    return{\n        companyName: state.addApp.applicationDetail.companyName,\n        positionName: state.addApp.applicationDetail.positionName,\n    }\n}\n\nconst mapDispatchToProps= dispatch =>{\n    return {\n        onCompanyChange: (event) => dispatch(setCompanyName(event.target.value)),   \n        onPositionChange: (event) => dispatch(setPositionName(event.target.value)),    \n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(CompanyPositionAdd)\n","import React,{Component} from 'react';\nimport Calendar from 'react-calendar';\nimport './Calendar.css';\nimport 'react-calendar/dist/Calendar.css';\n\nexport class CalendarComponent extends Component{\n    state = {\n        date: new Date(),\n    }\n    //need to get props\n\n    onChange = date => {\n        this.props.calendarChange(date)\n        this.setState({date})\n    }\n\n    render(){\n        return(\n            <div className = 'Calendar-container'>\n                <Calendar\n                className = \"main changeMargin changeSize calendarColor currentDay\"\n                tileClassName =\" customTile background changeFocus \"\n                onChange={this.onChange}\n                value={this.state.date}\n                />\n            </div>\n        );\n    }\n}\nexport default CalendarComponent","import React,{useState, Component} from 'react';\nimport CalendarComponent from './../calendar/CalendarComponent';\nimport RadioButtons from '../radio/RadioButtons'\nimport './Modalbox.css';\nimport './Calendar.css';\nimport 'react-calendar/dist/Calendar.css';\n\nimport {connect} from 'react-redux'\nimport {setDates} from './../../redux/addApp-reducer/addAppAction'\n\n\n// Calandar 컴포넌트는 reusable 해서 다른곳에 적용 가능, \n// 다른 기능 구현할때 따로 class로 빼놓을듯. \n\nexport class InterviewDate extends Component{\n\n  onChangeDate = date => {\n    const newDates = this.props.dates\n    newDates[0].date = date\n    this.props.setDates(newDates)\n  }\n\n  onChange = (value) => {\n    var boolean = true;\n    if (value == 1) {\n        boolean = true;\n    }\n    else{\n        boolean = false;\n    }\n    const newDates = this.props.dates\n    newDates[0].showDate = boolean\n    this.props.setDates(newDates)\n}\n\n  render(){        \n    const radioValue =    \n      [ \n      { name: 'Yes', value: '1' },\n      { name: 'No', value: '2' },\n      ]\n        return(\n        <div>\n            <div className=\"modal-text\">When did you apply?</div>\n                <CalendarComponent\n                  calendarChange={this.onChangeDate}\n                />\n            <div className=\"modal-text\">Display this date on timeline?</div>\n            <div className = \"button-choice-container\">\n              <div className = \"radio-container\">\n              <RadioButtons options = {radioValue} onChange = {this.onChange} isDisabled = {false}/>\n              </div>\n            </div>\n          {console.log(this.props.dates)}\n        </div>\n      )\n  }\n}\n\nconst mapStatetoProps = state => {\n  return{\n      dates: state.addApp.dates,\n  }\n}\nconst mapDispatchToProps= dispatch =>{\n  return {\n    setDates: (date) => dispatch(setDates(date)),   \n  }\n}\n\nexport default connect(mapStatetoProps,mapDispatchToProps)(InterviewDate);\n","import React, { Component } from 'react'\nimport './Page.css';\n\nexport class Page extends Component{\n\n\n    render(){\n        const pageCount = this.props.pageCount;\n        return(\n            <div className = \"circle-container\">\n                {  \n                    pageCount.map(i =>{\n                        if(i === this.props.pageNumber){\n                            return <div className=\"circle\"/>\n                        }else{\n                            return <div className=\"other-circles\"/>\n                        }\n                    })    \n                }\n            </div>\n        );\n\n    }\n}\nexport default Page;","export const setApps = (apps) => ({\n    type: 'SET_APPS',\n    payload: apps\n});  \n\nexport const requestProgress = () => (dispatch) => {\n    dispatch({type: 'REQUEST_PROGRESS_PENDING'});\n    fetch('http://localhost:3000/')\n    .then(res => res.json())\n    .then(data => dispatch({\n        type: 'REQUEST_PROGRESS_SUCCESS',\n        payload: data\n    }))\n    .catch(error => dispatch({\n        type: 'REQUEST_PROGRESS_FAILED',\n        payload: error\n    }))\n}\n\n// async export function requestProgress(dispatch){\n//     dispatch({type: 'REQUEST_PROGRESS_PENDING'});\n//     const response = await fetch('http://localhost:3000/')\n//     const json = await response.json()\n//     const data = await dispatch({\n//         type: 'REQUEST_PROGRESS_SUCCESS',\n//         payload: json\n//     })\n// }\n// export default requestProgress\n\n\nexport const postProgress = (application) => (dispatch) =>{\n    console.log(\"STRING\"+JSON.stringify({application}))\n    dispatch({type: 'POST_PROGRESS_PENDING'});\n    fetch('http://localhost:3000/abc', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        application\n      })\n    })\n    .then(response => response.json())\n    .then(() => dispatch({\n            type: 'POST_PROGRESS_SUCCESS',\n        })\n    ).then(requestProgress())\n    .catch(error => dispatch({\n        type: 'POST_PROGRESS_FAILED',\n        payload: error\n    }))\n}\n","import React, {Component} from 'react';\nimport RoleLocationAdd from './RoleLocationAdd';\nimport Applied from './Applied';\nimport CompanyPositionAdd from './CompanyPositionAdd';\nimport InterviewDate from './InterviewDate';\nimport Page from '../page/Page'\n\nimport {connect} from 'react-redux'\nimport {postNewApp, setSelectedCategories} from './../../redux/addApp-reducer/addAppAction'\nimport {requestProgress} from './../../redux/progress-reducer/progressAction'\n\n\nconst mapStatetoProps = state => {\n    return{\n        addApp: state.addApp,\n        categories: state.categories.categories\n    }\n} \n\nconst mapDispatchToProps= dispatch =>{\n    return {\n        onRequestProgress: () => dispatch(requestProgress()),        \n        postNewApp: (app) => dispatch(postNewApp(app)),\n        setSelectedCategories: (categories) => dispatch(setSelectedCategories(categories))\n    }\n}\n\n\nexport class UserForm extends Component {\n    state = {\n        step: 1,\n    }\n\n    //Send Post request, close modal(save button)\n    onSaveButton = async() => {\n        // this.props.postNewApp(this.props.addApp)\n        console.log(\"Triggered\")\n        const app = await this.props.postNewApp(this.props.addApp)\n        console.log(\"Triggered\")\n        const app2 = setTimeout(()=> this.props.onRequestProgress(), 500) \n        var newCategory = this.props.addApp.Categories;\n        for (var i=0;i<this.props.addApp.Categories.length;i++){\n        console.log(this.props.categories[i])\n        newCategory[i].SuggestionsOrSeleceted = []\n        }\n        this.props.setSelectedCategories(newCategory)\n        this.props.handleClose()\n    }\n\n\n\n\n    nextStep = () =>{\n        const {step}  = this.state;\n        this.setState({\n            step: step + 1\n        });\n    }\n\n    prevStep = () =>{\n        const {step}  = this.state;\n        this.setState({\n            step: step - 1\n        });\n    }\n\n\n    \n    render(){\n        const{step} = this.state;\n        switch(step){\n            case 1:\n                return(\n                    <div>\n                        <Page pageNumber ={this.state.step} pageCount = {[1,2,3,4]}/>\n                        <CompanyPositionAdd \n                            nextStep = {this.nextStep}\n                        />\n                    </div>\n                );\n            case 2:\n                return (\n                    <div>\n                        <Page pageNumber ={this.state.step} pageCount = {[1,2,3,4]}/>\n                        <RoleLocationAdd\n                        nextStep = {this.nextStep}\n                        prevStep = {this.prevStep}\n                        />\n                    </div>\n                )\n            case 3:\n                return (\n                    <div>\n                        <Page pageNumber ={this.state.step} pageCount = {[1,2,3,4]}/>\n                        <Applied\n                        nextStep = {this.nextStep}\n                        prevStep = {this.prevStep}\n                        />\n                    </div>\n                )\n                //can use save button here. Send info from this save?\n            case 4:\n                return (\n                    <div>\n                        <Page pageNumber ={this.state.step} pageCount = {[1,2,3,4]}/>\n                        <InterviewDate \n                        />\n                        <div className=\"next-button-container\">\n                            <button className = \"button-next\" onClick={this.onSaveButton}>Save</button>\n                        </div>\n                    </div>\n                )\n        }\n    }\n}\n\nexport default connect(mapStatetoProps,mapDispatchToProps)(UserForm)","import React, {useState} from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport UserForm from './UserForm.js';\nimport './Modalbox.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n      margin: theme.spacing(1),\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1),\n    },\n}));\n\n\nconst ModalBox = (props) => {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Fab variant=\"extended\" onClick = {handleShow} size = \"small\">\n                <AddIcon className={classes.extendedIcon}/>\n                    New App\n            </Fab>            \n            <Modal \n            show={show}\n            onHide={handleClose}\n            centered\n            dialogClassName = \"ModalMain\"\n            >\n                <div className = 'Modal-container'>\n                    <button className =\"button-close\" onClick={handleClose}>X</button>\n                    <UserForm handleClose = {handleClose}/>\n                </div>\n            </Modal>\n        </div>\n    )\n};\nexport default ModalBox;\n\n\n// const ModalBox = (props) => {\n//     const [modalIsOpen, setModalIsOpen] = useState(false) \n//     return (\n//         <div>\n//             <button onClick={() => setModalIsOpen(true)}>Open modal</button>\n//             <Modal className = 'Modal-small' closeTimeoutMS={300} isOpen = {modalIsOpen} onRequestClose={() => setModalIsOpen(false)}> \n//                 <UserForm/>\n//                 <button onClick={() => setModalIsOpen(false)}>close modal</button>\n//             </Modal>\n//         </div>\n//     )\n// };","\n\nexport const updateFilteredProgress = (apps) => ({\n    type: 'UPDATE_FILTERED_PROGRESS',\n    payload: apps\n});  \nexport default updateFilteredProgress\n\n\nexport const updateFilteredProgressTitle = (title) => ({\n    type: 'UPDATE_FILTERED_PROGRESS_TITLE',\n    payload: title\n});  \n\nexport const updateFilteredProgressButtonValue = (value) => ({\n    type: 'UPDATE_FILTERED_PROGRESS_BUTTON_VALUE',\n    payload: value\n});  \n","import React, { Component, useState } from 'react';\nimport Button from 'react-bootstrap/Button'\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\n\nimport ReactTooltip from \"react-tooltip\";\nimport './../components/radio/RadioButtons.css';\nimport './CategoryButtons.scss';\n\nimport {connect} from 'react-redux'\nimport {updateFilteredProgress, updateFilteredProgressTitle, updateFilteredProgressButtonValue} from '../redux/filteredProgress-reducer/filteredProgressAction'\n\n\n\nconst mapStatetoProps = state => {\n  return{\n      apps: state.progress.applications,\n      filteredProgress: state.filteredProgress\n  }\n}\nconst mapDispatchToProps= dispatch =>{\n  return {\n    updateFilteredProgress: (applications) => dispatch(updateFilteredProgress(applications)),\n    updateFilteredProgressTitle: (title) => dispatch(updateFilteredProgressTitle(title)),\n    updateButtonValue: (value) => dispatch(updateFilteredProgressButtonValue(value))\n  }\n}\n\nfunction CategoryButtons(props) {\n\n    const [radioValue, setRadioValue] = useState(props.filteredProgress.selectedButtonValue);\n    const radios = props.options;\n    const [targetName, setTargetName] = useState('');\n    const [targetValue, setTargetValue] = useState('0')\n    const [toolTip, setToolTip] = useState(false);\n\n    const [targetTitle, setTargetTitle] = useState(props.filteredProgress.selectedTitle)   \n\n    const radioChange = (e) => {\n      if(e.currentTarget.value==='0'||e.currentTarget.value==='1'){\n      e.preventDefault();\n      var name = ''\n      for(var i=0;i<radios.length;i++){\n        if(radios[i].value ===  e.currentTarget.value)\n          name = radios[i].name\n      }\n      props.onChange(name);\n\n      // setRadioValue(e.currentTarget.value)\n\n      var filtered = [] \n      if(e.currentTarget.value === '0'){\n        filtered = props.apps\n        props.updateFilteredProgressTitle(\"\")\n        setRadioValue('0')\n        props.updateButtonValue('0')\n\n      }\n      //isFavorite = true인 case들\n      else if(e.currentTarget.value === '1'){\n        setRadioValue('1')\n        props.updateButtonValue('1')\n        props.updateFilteredProgressTitle(\"Starred\")\n        for(var i=0;i<props.apps.length;i++){\n          if(props.apps[i].Detail.IsFavorite) \n            filtered = filtered.concat(props.apps[i])\n        }\n      }\n\n      props.updateFilteredProgress(filtered)\n    }\n    }\n\n\n    const handleChange = (e) =>{\n      setTargetName(e.target.getAttribute('name'))\n      setTargetValue(e.target.getAttribute('value'))\n      if(e.target.getAttribute('name')!=='All'&&e.target.getAttribute('name')!=='Starred'){\n        setToolTip(false)\n      }\n      else{\n        setToolTip(true)\n      }\n    }\n\n    const categoryDivided = () =>{\n      var temp = []\n      for(var i=0; i<props.apps.length; i++){\n          for(var j=0; j<props.apps[i].Detail.Categories.length;j++){\n              if(props.apps[i].Detail.Categories[j].Type === targetName){\n                for(var k=0; k<props.apps[i].Detail.Categories[j].SuggestionsOrSeleceted.length;k++){\n                  if(!temp.includes(props.apps[i].Detail.Categories[j].SuggestionsOrSeleceted[k])){\n                    temp = temp.concat(props.apps[i].Detail.Categories[j].SuggestionsOrSeleceted[k])\n                  }\n                }    \n              }\n          }\n      }\n\n    return(\n      <div className = \"tooltip-container\">\n      { \n        temp.map((entity) => (\n        <button className = \"subCategory-button\" name = {entity} onClick ={e => onClickButton(e)}>{entity}</button>\n        ))\n      }\n      </div>\n\n    )\n  }\n\n    const onClickButton = (e) =>{\n      setRadioValue(targetValue)\n      props.updateButtonValue(targetValue)\n      props.updateFilteredProgressTitle(e.target.getAttribute('name'))\n      setTargetTitle(e.target.getAttribute('name'))\n      filterProgress(e)\n    }\n\n    const filterProgress = (e) =>{\n      var filtered = [] \n      for(var i=0; i<props.apps.length ;i++){\n        //save i as an index\n        for(var j=0;j<props.apps[i].Detail.Categories.length;j++){\n          if(props.apps[i].Detail.Categories[j].Type === targetName){\n            for(var k=0; k<props.apps[i].Detail.Categories[j].SuggestionsOrSeleceted.length;k++){\n              if(e.target.getAttribute('name') === props.apps[i].Detail.Categories[j].SuggestionsOrSeleceted[k]){\n                filtered = filtered.concat(props.apps[i])\n              }\n            }\n          }\n       }\n    }\n      props.updateFilteredProgress(filtered)\n    }\n\n    return (\n        <ButtonGroup toggle className = {props.classContainerProps}>\n          {radios.map((radio, idx) => (\n              <div className=\"button-container\">\n                <ToggleButton\n                className={\"colorChange activeChange hoverChange text \" + props.buttonContainerProps}\n                key={idx}\n                type=\"radio\"\n                variant=\"secondary\"\n                name=\"radio\"\n                value={radio.value}\n                checked={radioValue === radio.value}\n                onChange={(e) => radioChange(e, radioValue)}\n                data-for=\"radioTip\"\n                data-tip = ''\n                onMouseEnter = {e => handleChange(e)}\n                >\n                  <div className = \"radio-button-container\" name = {radio.name} value = {radio.value}>\n                    {radio.name}\n                  </div>\n                </ToggleButton>\n                <ReactTooltip\n                  id={(radioValue !== 0&&radioValue.value !== 1)?\"radioTip\":\"\"}\n                  className = \"extraClass colorFix colorFixBottom colorFixBottomBefore colorFixBottomAfter\"\n                  effect='solid'\n                  delayHide={100}\n                  place={'bottom'}\n                  disable\t={toolTip}\n                  >\n                    {categoryDivided()}\n                </ReactTooltip>\n            </div>\n          ))}\n        </ButtonGroup>\n\n       \n    );\n  }\n  export default connect(mapStatetoProps, mapDispatchToProps)(CategoryButtons);\n\n","import React, {Component} from 'react';\nimport RadioButtons from './../radio/RadioButtons'\nimport './NewTask.css'\n\n\nexport class NextStep extends Component{\n    constructor(){\n        super()\n        this.state ={\n            userInput : \"\",\n            disabled: false, \n        }\n    }\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    onUserInput = (e) => {\n    if(e.currentTarget.value !== \"\"){\n        this.setState({\n            userInput:e.currentTarget.value,\n            disabled:true\n        })\n    }\n    else{\n        this.setState({\n            userInput:\"\",\n            disabled: false\n        })\n    }    \n    this.props.onChangeOption(this.state.userInput)    \n    }\n    onChange = (value) => {\n        this.props.onChangeOption(value)\n    }\n  \n    render(){\n        const radioValue =    \n        [ \n            { name: 'Interview', value: '1' },\n            { name: 'Challenge', value: '2' },\n            { name: 'Test',     value: '3' },\n        ]\n        return(\n            <div>\n                <div className=\"modal-text\">What is the next step?</div>\n                <div  className = \"radio\">\n                    <RadioButtons options = {radioValue} onChange = {this.onChange} classContainerProps = \"button-group-container\" buttonContainerProps = \"button-props\" \n                    isDisabled = {this.state.disabled}/>\n                </div>\n                <input\n                        className =\"customizeInputField\"\n                        placeholder=\"Customize Step Name\"\n                        onChange = {e => this.onUserInput(e)}\n                        value={this.state.userInput}\n                    />\n\n                <div className =\"next-button-container\">\n                    <button className =\"button-next\" onClick = {this.continue}>\n                        Next\n                    </button>\n                </div>\n            </div>\n           \n        );\n    }\n}\n\nexport default NextStep\n","import React, {Component} from 'react';\nimport CalendarComponent from './../calendar/CalendarComponent'\nimport RadioButtons from './../radio/RadioButtons'\n\n\nexport class NewDate extends Component{\n\n\n    onChange = (value) => {\n        this.props.onInterviewOptionChange(value)\n    }\n  \n    render(){\n        const radioValue =    \n        [ \n        { name: 'Yes', value: '1' },\n        { name: 'No', value: '2' },\n        ]\n        return(\n            <div>\n                <CalendarComponent\n                  calendarChange={this.props.calendarChange}\n                />\n                <div className=\"modal-text\">Display this date on timeline?</div>\n                <div className = \"button-choice-container\">\n                    <div className = \"radio-container\">\n                    <RadioButtons options = {radioValue} onChange = {this.onChange}/>\n                </div>\n                </div>\n            </div>\n           \n        );\n    }\n}\n\nexport default NewDate\n//Add x button bootstrap or material-ui x ","import React, {Component} from 'react';\nimport NextStep from './NextStep';\nimport NewDate from './NewDate';\nimport Page from '../page/Page'\nimport './NewTask.css'\n\n\nexport class NewTask extends Component {\n    state = {\n        step: 1,\n        title: \"\",\n        date: new Date(),\n        showDate: true\n    }\n\n    nextStep = () =>{\n        const {step}  = this.state;\n        this.setState({\n            step: step + 1\n        });\n    }\n\n    prevStep = () =>{\n        const {step}  = this.state;\n        this.setState({\n            step: step - 1\n        });\n    }\n\n    calendarChange = date => {\n        this.setState({\n            date: date\n        });\n    }\n\n    onChangeOptions = (value) => {\n        if(value === '1'){\n            this.setState({\n                title: \"Interview\"\n            })\n        }\n        else if(value === '2'){\n            this.setState({\n                title: \"Challenge\"\n            })\n        }\n        else if(value === '3'){\n            this.setState({\n                title:\"Test\"\n            })\n        }\n        else{\n            this.setState({\n                title: value\n            })\n        }\n    }\n\n    onChangeOption = (value) => {\n        var boolean = true;\n        if (value == 1) {\n            boolean = true;\n        }\n        else{\n            boolean = false;\n        }\n        return boolean;\n    }\n    onInterviewOptionChange = (value) => {\n        this.setState({\n            showDate: this.onChangeOption(value)\n        })\n    }\n    onClick = e => {\n        e.preventDefault();\n        this.props.onClickSave(this.state.title, this.state.date, this.state.showDate)\n    }\n\n    render(){\n        const{step} = this.state;\n        \n        switch(step){\n            case 1:\n                return(\n                    <div>\n                        <Page pageNumber ={this.state.step} pageCount = {[1,2]}/>\n                        <NextStep \n                            nextStep = {this.nextStep}\n                            onChangeOption = {this.onChangeOptions}\n                        />\n                    </div>\n                );\n            case 2:\n                return (\n                    <div>\n                        <Page pageNumber ={this.state.step} pageCount = {[1,2]}/>\n                        <NewDate\n                        onSaveButton = {this.onSaveButton}\n                        calendarChange = {this.calendarChange}\n                        date = {this.state.date}\n                        onInterviewOptionChange = {this.onInterviewOptionChange}\n                        />\n                        <div className=\"next-button-container\">\n                            <button className = \"button-next\" \n                            onClick={this.onClick} >\n                                Save\n                            </button>\n                        </div>\n                    </div>\n                )\n        }\n    }\n}\nexport default NewTask","import React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport './../addApp/Modalbox.css'\nimport './Progress.css'\nimport './ProgressBar.scss'\n\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Moment from 'moment';\nimport NewTask from '../newTask/NewTask.js'\n\nimport {setApps} from './../../redux/progress-reducer/progressAction'\nimport {connect} from 'react-redux'\n\nconst mapStatetoProps = state => {\n    return{\n        apps: state.progress.applications,\n        filteredProgress: state.filteredProgress.applications\n    }\n}\n\nconst mapDispatchToProps= dispatch =>{\n    return {\n        setApps: (applications) => dispatch(setApps(applications)),\n    }\n}\n\nexport class ProgressBar extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            step: 1,\n            show: false,\n        }\n    }\n\n    handleCompleted = (date) => {\n        const apps = this.props.filteredProgress\n        for(var i=0;i<apps.length;i++){\n            if(apps[i].applicationID === this.props.applicationID){\n\n                for(var j=0;j<apps[i].Tasks.length;j++){\n                    \n                    if(apps[i].Tasks[j].midTaskID === date.midTaskID){\n                        apps[i].Tasks[j].Status = !apps[i].Tasks[j].Status\n                        console.log(\"here?\")\n                        break;\n                    }\n                }\n            }\n        }\n        this.props.setApps(apps)\n        this.setState({})\n        \n    }\n\n\n    handleClose = () => {\n        this.setState({show: false});\n    }\n    handleShow = () => {\n        this.setState({show: true});\n    }\n    nextStep = () =>{\n        const {step}  = this.state;\n        this.setState({\n            step: step + 1\n        });\n    }\n    prevStep = () =>{\n        const {step}  = this.state;\n        this.setState({\n            step: step - 1\n        });\n    }\n    onClickSave = (title, date, dateShow) =>{\n\n        this.props.onClickAdd(this.props.applicationID, title, date, dateShow)\n        this.handleClose()\n    }\n    //use if clause to determine what color to use.\n    render(){\n        const dates = this.props.dates\n        const sortedDates = dates.sort((a, b) => a.Time - b.Time)\n        return(\n                <div className = \"progressbar-container\">\n                    <div className = \"progressLine\"/>\n                        <div className = \"progress-outer-container\">\n                        \n                        {\n                        sortedDates.map((date) => (\n                            (date.Title===\"Applied\")?\n                                ((date.Status)?\n                                    <div className = \"application-status-container\">\n                                        <div className=\"applicationFirst completed\" onClick = {()=>this.handleCompleted(date)}></div>\n                                        <div className=\"date-font\">{Moment(date.Time).format('MMM DD')}</div>\n                                    </div>:\n                                    <div className = \"application-status-container\">\n                                        <div className=\"applicationFirst notCompleted\" onClick = {()=>this.handleCompleted(date)}></div>\n                                        <div className=\"date-font\">{Moment(date.Time).format('MMM DD')}</div>\n                                    </div>):                                  \n                                    undefined\n                        ))}\n                            <div className =\"progress-inner-container\">\n                            {\n                            sortedDates.map((date) => (\n                                (date.Title!==\"Applied\")?\n                                    ((date.showDate)?\n                                        ((date.Status)?\n                                            <div className = \"application-status-container\">\n                                                <div className=\"applicationFirst completed\" onClick = {()=>this.handleCompleted(date)}></div>\n                                                <div className=\"date-font\">{Moment(date.Time).format('MMM DD')}</div>\n                                            </div>: \n                                            <div className = \"application-status-container\">\n                                                <div className=\"applicationFirst notCompleted\" onClick = {()=>this.handleCompleted(date)}></div>\n                                                <div className=\"date-font\">{Moment(date.Time).format('MMM DD')}</div>\n                                            </div>)\n                                    : undefined):undefined\n                            ))\n                            }\n                            <div className = \"application-status-container\">\n                                <Fab variant=\"round\" className = \"addTask\" onClick={this.handleShow}>\n                                    <AddIcon className = \"sizeChange\"/>\n                                </Fab>\n                            </div>\n                            </div>\n                            <div className = \"application-result-container\">\n                            <Fab variant=\"round\" className = \"addTask\" onClick={this.props.onClickAdd}>\n                                    <AddIcon className = \"sizeChange\"/>\n                            </Fab>\n                            </div>\n                    </div>\n                    <Modal \n                    show={this.state.show}\n                    onHide={this.handleClose}\n                    centered\n                    dialogClassName = \"ModalMain\"\n                    >    \n                        <div className = 'Modal-container'>\n                            <button className =\"button-close\" onClick={this.handleClose}>X</button>\n                            <NewTask onClickSave = {this.onClickSave} applicationID = {this.props.applicationID}/>\n                        </div>\n                    </Modal>\n                </div>\n        )\n    }\n}\nexport default connect(mapStatetoProps,mapDispatchToProps)(ProgressBar);","import React, { Component } from 'react';\nimport ProgressBar from '../components/progress/ProgressBar'\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport './../components/progress/Progress.css'\nimport './ApplicationList.scss'\n// import Rating from \"@material-ui/lab/Rating\";\n import Rating from 'react-rating';\nimport {setApps, requestProgress, postProgress} from '../redux/progress-reducer/progressAction'\nimport {connect} from 'react-redux'\nimport 'font-awesome/css/font-awesome.min.css';\n\n\nconst mapStatetoProps = state => {\n    return{\n        apps: state.progress.applications,\n        filteredProgress: state.filteredProgress.applications,\n        selectedTitle: state.filteredProgress.selectedTitle\n    }\n}\nconst mapDispatchToProps= dispatch =>{\n    return {\n        setApps: (applications) => dispatch(setApps(applications)),\n        onRequestProgress: () => dispatch(requestProgress()),        \n        postProgress: (body) => dispatch(postProgress(body))\n    }\n}\n\n\nexport class Progress extends Component{\n    constructor(){\n        super();\n        this.state =  {\n            searchField:''\n        }\n    }\n    //UID, APP ID, TASK use post call\n    //return task with id\n    onClickIsFavorite = (applicationID) =>{\n        var apps = this.props.apps\n\n        for(var i=0; i<apps.length;i++){\n            if(apps[i].applicationID+\"\" === applicationID+\"\"){\n                apps[i].Detail.IsFavorite = !apps[i].Detail.IsFavorite\n                break;\n            }\n        }\n        this.props.setApps(apps)\n        this.setState({})\n    }\n\n    onClickAdd = (applicationID, title, date, showDate) => {\n        const apps = this.props.apps\n        apps.map((data) =>{\n            if(data.applicationID === applicationID){\n                data.Tasks = data.Tasks.concat({\n                    Time: date,\n                    Title: title,\n                    showDate : showDate,\n                    Status: false\n                })\n            }\n        })\n        this.props.setApps(apps)\n        this.setState({})\n    }\n\n    onSearchChange = (e) =>{\n        this.setState({\n            searchField: e.target.value\n        })\n        console.log(this.state.searchField)\n    }\n\n    render(){\n        const searchFilteredProgress = this.props.filteredProgress.filter(application => {\n            return (application.Detail.CompanyName.toLowerCase().includes(this.state.searchField.toLowerCase())||application.Detail.PositionName.toLowerCase().includes(this.state.searchField.toLowerCase()) )\n        })\n\n        return(\n            <div>\n            <div className =\"searchBox-container\">\n            <input \n            className =\"searchBox\"\n            type='search' \n            placeholder = '  Search application'\n            onChange = {e => this.onSearchChange(e)}\n            value = {this.state.searchField}\n            />\n            </div>\n            {this.props.selectedTitle !== \"\"? <div className =\"selectedTitle\">{this.props.selectedTitle}</div>:undefined}\n            <div className = \"taskTitles\">\n                <div className=\"taskEntity\">Apply</div>\n                <div className=\"taskEntity\">Task</div>\n                <div className=\"taskEntity\">Result</div>\n            </div>\n                {\n                    (searchFilteredProgress.length > 0)?\n                    searchFilteredProgress.map((data) => (\n                            \n                            <div className = \"progress-all\">\n                                <div className = \"starContainer\">\n                                <Rating className =\"starIcon\" applicationName = {data.applicationID} stop={1} initialRating = {data.Detail.IsFavorite?1:0} onClick = {() => this.onClickIsFavorite(data.applicationID)}\n                                emptySymbol=\"fa fa-star-o starSize starIcon\"\n                                fullSymbol = \"fa fa-star starSize starIcon\"\n                                 />\n                                </div>\n                                    <div className = \"application-name\" onClick = {e => this.props.toApplicationDetail(data.Detail.applicationID)}>\n                                    <div className = \"progress-company\">{data.Detail.CompanyName}</div>\n                                    <div className = \"progress-position\">{data.Detail.PositionName}</div>\n                                    </div>\n                                <ProgressBar applicationID = {data.Detail.applicationID} applied = {data.applied} dates = {data.Tasks} onClickAdd = {this.onClickAdd}/>\n                            </div>\n                            )):undefined\n                }\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStatetoProps,mapDispatchToProps)(Progress);","import React, { Component } from 'react';\nimport ModalBox from './../components/addApp/ModalBox'\nimport './../components/addApp/Modalbox.css'\nimport './../components/progress/Progress.css'\nimport ApplicationListComponents from './ApplicationListComponents'\nimport ApplicationListProgress from './ApplicationListProgress'\nimport './ApplicationList.scss'\nimport {updateFilteredProgress} from '../redux/filteredProgress-reducer/filteredProgressAction'\n\nimport {connect} from 'react-redux'\n\n\n\nconst mapStatetoProps = state => {\n    return{\n        apps: state.progress.applications,\n        filteredProgress: state.filteredProgress.applications\n    }\n}\nconst mapDispatchToProps= dispatch =>{\n    return {\n        updateFilteredProgress: (applications) => dispatch(updateFilteredProgress(applications)),\n    }\n}\n\nexport class MainPage extends Component{\n\n    onChange = (value) => {\n        console.log(value)\n        var boolean = true;\n        if (value == 1) {\n            boolean = true;\n        }\n        else{\n            boolean = false;\n        }   // this.props.setDates(newDates)\n    }\n   \n\nrender(){\n    const radioValue =    \n        [ \n        { name: 'All', value: '0' },\n        { name: 'Starred', value: '1' },\n        ]\n    const filteredProgress = []\n    const categoryDivided = () =>{\n        var temp = []\n        for(var i=0; i<this.props.apps.length; i++){\n            for(var j=0; j<this.props.apps[i].Detail.Categories.length;j++){\n                if(!temp.includes(this.props.apps[i].Detail.Categories[j].Type) && this.props.apps[i].Detail.Categories[j].SuggestionsOrSeleceted.length>0){\n                        temp = temp.concat(this.props.apps[i].Detail.Categories[j].Type)}\n                }\n        }\n        for(var i=0;i<temp.length;i++){\n            radioValue.push({\n                name : temp[i],\n                value: i+2+\"\"\n            })\n        }\n    }\n\n\n    return(\n        <div>\n        <div className =\"mainpage-container\">\n        {categoryDivided()}\n        <ApplicationListComponents options = {radioValue} onChange = {this.onChange}/>\n        <ApplicationListProgress toApplicationDetail = {this.props.toApplicationDetail}/>\n        </div>\n        <div className = 'modalButton'>\n            <ModalBox/>\n        </div>\n        </div>\n    )\n}\n\n\n}\nexport default connect(mapStatetoProps, mapDispatchToProps)(MainPage)","import React, {Component, useState} from 'react';\nimport {connect} from 'react-redux'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport './../main_applications/ApplicationDetail.scss'\n\nconst mapStatetoProps = state => {\n    return{\n        applicationDetail : state.applicationDetail.application\n    }\n  }\n\nfunction ApplicationDetailContacts(props){\n    const [radioValue, setRadioValue] = useState('0');\n    const radios = \n        [\n            { name: 'Email', value: '0' },\n            { name: 'Phone', value: '1' },\n            { name: 'Convo', value: '2' },\n        ]\n    const radioChange = (e) =>{\n        setRadioValue(e.target.value)\n    }\n    const display = () =>{\n        switch(radioValue) {\n            case '0' :\n                return(\n                    <div className = \"applicationDetailTextBody\">\n                        {props.contact.Email.Email}\n                    </div>\n                )\n            case '1' :\n                return(\n                    <div className = \"applicationDetailTextBody\">\n                        {props.contact.Phone.PhoneNumber}\n                    </div>\n                )\n            case '2' :\n                return(\n                    <div className = \"applicationDetailTextBody\">\n                    more to decide</div>\n                )\n        }\n    }\n    return(\n        <div>\n            <div className = \"applicationDetailContactsContainer\">\n                <div>\n                    <div className = \"applicationDetailContactsTitle\">\n                        <div className = \"applicationDetailTextTitle\">{props.contact.PersonalDetail.Firstname}</div>\n                        <div className = \"applicationDetailTextTitle\">{props.contact.PersonalDetail.Lastname}</div>\n                        <div className = \"applicationDetailTextTitle\">{props.contact.PersonalDetail.Title}</div>\n                        <div className = \"applicationDetailTextTitle\">{props.contact.PersonalDetail.Company}</div>\n                    </div>\n                    <ButtonGroup toggle className = {props.classContainerProps}>\n                    {radios.map((radio, idx) => (\n                        <div className=\"button-container-applicationDetail\">\n                            <ToggleButton\n                            className={\"applicationDetialButtonGroups activeChange hoverChange text\"}\n                            key={idx}\n                            type=\"radio\"\n                            variant=\"secondary\"\n                            name={radio.name}\n                            value={radio.value}\n                            checked={radioValue === radio.value}\n                            onChange={(e) => radioChange(e, radioValue)}\n                            >\n                            <div className = \"radio-button-container-applicationDetail\" name = {radio.name} value = {radio.value}>\n                                {radio.name}\n                            </div>\n                            </ToggleButton>\n                            </div>\n                    ))}\n                        </ButtonGroup>\n                    </div>\n                    <div>\n                        {display()}\n                    </div>\n            </div>\n        </div>\n    )\n}\nexport default connect(mapStatetoProps,null)(ApplicationDetailContacts)","import React, {Component, useState} from 'react';\nimport {connect} from 'react-redux'\nimport {requestProgress} from './../redux/progress-reducer/progressAction'\nimport {setSelectedCategories} from './../redux/addApp-reducer/addAppAction'\nimport {updateFilteredProgress} from './../redux/filteredProgress-reducer/filteredProgressAction'\nimport './../components/radio/RadioButtons.css'\nimport './ApplicationDetail.scss'\n\nimport ApplicationDetailContacts from './../main_applications_components/ApplicationDetailContacts'\n\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\n\n\n\nconst mapStatetoProps = state => {\n  return{\n      apps: state.progress.applications,\n      pending: state.progress.isPending,\n      categories: state.categories.categories, \n      applicationDetail : state.applicationDetail.application\n  }\n}\n\nconst mapDispatchToProps= dispatch =>{\n  return {\n      onRequestProgress: () => dispatch(requestProgress()),\n      setSelectedCategories: (categories) => dispatch(setSelectedCategories(categories)),\n      updateFilteredProgress: (applications) => dispatch(updateFilteredProgress(applications)),\n  }\n}\n\nfunction ApplicationDetailComponents(props){\n    const [radioValue, setRadioValue] = useState('0');\n    const [radioName, setRadioName] = useState('Events');\n    const radios =  \n    [ \n    { name: 'Events', value: '0' },\n    { name: 'Notes', value: '1' },\n    { name: 'Contacts', value: '2' },\n    { name: 'Conversation History', value: '3' },\n    { name: 'Checklists', value: '4' },\n    ]\n    const [textValue, setTextValue] = useState('');\n\n\n    const radioChange = (e) => {\n    setRadioValue(e.target.value)\n    setRadioName(e.target.getAttribute('name'))\n    }\n\n    const onChangeTextArea = (e) =>{\n        setTextValue(e.target.value)\n    }\n\n    const display = () =>{\n        switch(radioValue){\n            case '0':\n                return (\n                    <div>{radioName}</div>\n                )\n            case '1':\n                return (\n                    <div>\n                        <textarea value = {textValue} onChange = {onChangeTextArea}>????</textarea>\n                    </div>\n                )\n            case '2':\n                return (\n                <div>\n                    {props.applicationDetail.Contacts.map((data) => (\n                        <ApplicationDetailContacts contact = {data}/>\n                    ))\n                    }\n                </div>                \n                )\n            case '3':\n                return (\n                    <div>{radioName}</div>\n                )\n            case '4':\n                return (\n                    <div>{radioName}</div>\n                )\n        }\n        \n        \n    }\n\n    return (\n      <div>\n          <ButtonGroup toggle className = {props.classContainerProps}>\n          {radios.map((radio, idx) => (\n            <div className=\"button-container-applicationDetail\">\n                <ToggleButton\n                className={\"applicationDetialButtonGroups activeChange hoverChange text\"}\n                key={idx}\n                type=\"radio\"\n                variant=\"secondary\"\n                name={radio.name}\n                value={radio.value}\n                checked={radioValue === radio.value}\n                onChange={(e) => radioChange(e, radioValue)}\n                >\n                  <div className = \"radio-button-container-applicationDetail\" name = {radio.name} value = {radio.value}>\n                    {radio.name}\n                  </div>\n                </ToggleButton>\n                </div>\n          ))}\n            </ButtonGroup>\n\n            {display()}\n\n\n\n\n        \n      </div>\n    );  \n}\n\nexport default connect(mapStatetoProps,mapDispatchToProps)(ApplicationDetailComponents);\n","\n\nexport const updateApplicationDetail = (apps) => ({\n    type: 'UPDATE_APPLICATION_DETAIL',\n    payload: apps\n});  \nexport default updateApplicationDetail\n","import React, { Component } from 'react';\nimport './../components/progress/Progress.css'\nimport './ApplicationList.scss'\nimport './ApplicationDetail.scss'\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport { faAngleLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nimport ApplicationDetailComponents from './ApplicationDetailComponents'\nimport {connect} from 'react-redux'\nimport updateApplicationDetail from './../redux/applicationDetail-reducer/ApplicationDetailAction'\n\nconst mapStatetoProps = state => {\n    return{\n        // apps: state.progress.applications,\n        filteredProgress: state.filteredProgress.applications,\n        applicationDetail : state.applicationDetail.application\n    }\n}\nconst mapDispatchToProps= dispatch =>{\n    return {\n        updateApplicationDetail: (applications) => dispatch(updateApplicationDetail(applications)),\n    }\n}\n\nexport class ApplicationDetail extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            application : ''\n        }\n    }\n    componentDidMount(){\n        var selectedApplication = {}\n        for(var i=0;i<this.props.filteredProgress.length;i++){\n            if(this.props.filteredProgress[i].applicationID === this.props.applicationID){\n                selectedApplication = this.props.filteredProgress[i]\n            console.log(\"sjfoqwpfjpoqjsop\")\n            }\n        }\n        this.setState({\n            application : selectedApplication\n        })\n        this.props.updateApplicationDetail(selectedApplication)\n    }\n    \n    render()\n    {\n        console.log(this.state.application.Detail)\n        return(\n            <div>\n                {this.state.application != ''?\n                <div>\n                    <div className = 'titleContainer'>\n                    {/* <button className = \"button-back\" onClick = {this.props.toApplicationList}> */}\n                    <FontAwesomeIcon className = \"angleLeft\" icon={faAngleLeft} onClick ={e => this.props.toApplicationList()}/>  \n                                      {/* </button> */}\n                    <div className = \"textTitle companyName\">{this.state.application.Detail.CompanyName}</div>\n                    <div className = \"textTitle positionName\">{this.state.application.Detail.PositionName}</div>\n                    </div>\n                <ApplicationDetailComponents/>\n                </div>          \n                :undefined\n                }\n            </div>\n        )\n    }\n}\nexport default connect(mapStatetoProps, mapDispatchToProps)(ApplicationDetail)","import React, {Component} from 'react';\n\nimport ApplicationDetail from './ApplicationDetail';\nimport ApplicationList from './ApplicationList'\n\nimport {connect} from 'react-redux'\nimport {updateFilteredProgress} from '../redux/filteredProgress-reducer/filteredProgressAction'\n\nconst mapStatetoProps = state => {\n    return{\n        apps: state.progress.applications,\n        filteredProgress: state.filteredProgress.applications\n    }\n}\nconst mapDispatchToProps= dispatch =>{\n    return {\n        updateFilteredProgress: (applications) => dispatch(updateFilteredProgress(applications)),\n    }\n}\n\n\nexport class Applications extends Component {\n    state = {\n        step: 1,\n        applicationID: ''\n    }\n\n    componentDidMount(){\n        console.log(\"TRIGGERED?\")\n        this.props.updateFilteredProgress(this.props.apps)\n    }\n\n    toApplicationDetail = (applicationID) =>{\n        const {step}  = this.state;\n        this.setState({\n            applicationID: applicationID,\n            step: step + 1\n        });\n    }\n\n    toApplicationList = () =>{\n        const {step}  = this.state;\n        this.setState({\n            step: step - 1\n        });\n    }\n\n\n    \n    render(){\n        const{step} = this.state;\n        switch(step){\n            case 1:\n                return(\n                    <div>\n                        <ApplicationList \n                            toApplicationDetail = {this.toApplicationDetail}\n                        />\n                    </div>\n                );\n            case 2:\n                return (\n                    <div>\n                        <ApplicationDetail\n                        toApplicationList = {this.toApplicationList}\n                        applicationID = {this.state.applicationID}\n                        />\n                    </div>\n                )\n        }\n    }\n}\n\nexport default connect(mapStatetoProps,mapDispatchToProps)(Applications)","import React, {Component, useState} from 'react';\nimport ModalBox from './../components/addApp/ModalBox.js';\nimport Applications from './../main_applications/Applications'\nimport {connect} from 'react-redux'\nimport {requestProgress} from './../redux/progress-reducer/progressAction'\nimport {setSelectedCategories} from './../redux/addApp-reducer/addAppAction'\nimport {updateFilteredProgress} from './../redux/filteredProgress-reducer/filteredProgressAction'\nimport './MainPage.scss';\nimport './../components/radio/RadioButtons.css'\nimport Button from 'react-bootstrap/Button'\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\n\n\n\nconst mapStatetoProps = state => {\n  return{\n      apps: state.progress.applications,\n      pending: state.progress.isPending,\n      categories: state.categories.categories\n  }\n}\n\nconst mapDispatchToProps= dispatch =>{\n  return {\n      onRequestProgress: () => dispatch(requestProgress()),\n      setSelectedCategories: (categories) => dispatch(setSelectedCategories(categories)),\n      updateFilteredProgress: (applications) => dispatch(updateFilteredProgress(applications)),\n  }\n}\n\nfunction MainPage(props){\n    const [radioValue, setRadioValue] = useState('0');\n    const radios =  \n    [ \n    { name: 'Applications', value: '0' },\n    { name: 'Companies', value: '1' },\n    { name: 'Templates', value: '2' },\n    ]\n    const radioChange = (e) => {\n    setRadioValue(e.target.value)\n    }\n\n    const display = () =>{\n        console.log(radioValue)\n        if(radioValue === '0'){\n            return (\n                <div>\n                    <Applications/>\n                </div>\n            )\n        }else {\n            return(\n                <div>more to go</div>\n            )\n        }\n        \n    }\n\n    return (\n      <div>\n          <ButtonGroup toggle className = {props.classContainerProps}>\n          {radios.map((radio, idx) => (\n            <div className=\"button-container\">\n                <ToggleButton\n                className={\"mainButtonGroups activeChange hoverChange text\"}\n                key={idx}\n                type=\"radio\"\n                variant=\"secondary\"\n                name=\"radio\"\n                value={radio.value}\n                checked={radioValue === radio.value}\n                onChange={(e) => radioChange(e, radioValue)}\n                >\n                  <div className = \"radio-button-container\" name = {radio.name} value = {radio.value}>\n                    {radio.name}\n                  </div>\n                </ToggleButton>\n                </div>\n          ))}\n            </ButtonGroup>\n\n            {display()}\n\n\n\n\n        \n      </div>\n    );  \n}\n\nexport default connect(mapStatetoProps,mapDispatchToProps)(MainPage);\n","import React, {Component, useState} from 'react';\nimport ModalBox from './components/addApp/ModalBox.js';\nimport ApplicationList from './main_applications/ApplicationList'\nimport Applications from './main_applications/Applications'\nimport MainPage from './main/MainPage'\nimport {connect} from 'react-redux'\nimport {requestProgress} from './redux/progress-reducer/progressAction'\nimport {setSelectedCategories} from './redux/addApp-reducer/addAppAction'\nimport {updateFilteredProgress} from './redux/filteredProgress-reducer/filteredProgressAction'\nimport './App.css';\n\n\n\n\nconst mapStatetoProps = state => {\n  return{\n      apps: state.progress.applications,\n      pending: state.progress.isPending,\n      categories: state.categories.categories\n  }\n}\n\nconst mapDispatchToProps= dispatch =>{\n  return {\n      onRequestProgress: () => dispatch(requestProgress()),\n      setSelectedCategories: (categories) => dispatch(setSelectedCategories(categories)),\n      updateFilteredProgress: (applications) => dispatch(updateFilteredProgress(applications)),\n  }\n}\n\nclass App extends Component {\n  \n  async componentDidMount() {\n    const apps = await this.props.onRequestProgress();\n    var newCategory = [];\n    for (var i=0;i<this.props.categories.length;i++){\n      newCategory = newCategory.concat({\n        Type : this.props.categories[i].name,\n        SuggestionsOrSeleceted : []\n      })\n    }\n    this.props.setSelectedCategories(newCategory)\n  }\n\n  render(){\n      this.props.updateFilteredProgress(this.props.apps);\n    return (\n      <div className=\"App\">\n       <MainPage/>\n      </div>\n    );  \n  }\n}\n\nexport default connect(mapStatetoProps,mapDispatchToProps)(App);\n","import addAppTypes from './addAppTypes'\n\nconst INITIAL_STATE = {\n    applicationDetail:{\n        companyName: '',\n        positionName: '',\n        pinned: false,\n    },\n    Categories : [\n        {\n        Type: 'Role',\n        SuggestionsOrSeleceted : [],\n        },\n        {\n            Type: 'Location',\n        SuggestionsOrSeleceted : [],\n        }\n    ],\n    archived: false, \n    dates :[\n        {key : 0, \n        date: new Date(), \n        showDate: true, \n        completed: true}\n    ],\n}\n\nconst addAppReducer  = (state = INITIAL_STATE, action) =>{\n    switch(action.type){\n        case 'SET_COMPANY_NAME':\n            return {\n                ...state,\n                applicationDetail:{\n                    companyName: action.payload,\n                    positionName: state.applicationDetail.positionName,\n                    pinned: state.applicationDetail.pinned,\n                }\n        };\n        case 'SET_POSITION_NAME':\n            return{\n                ...state,\n                applicationDetail:{\n                    companyName: state.applicationDetail.companyName,\n                    positionName: action.payload,\n                    pinned: state.applicationDetail.pinned,\n                }\n            };\n        case 'SET_SELECTED_CATEGORIES':\n            return{\n                ...state,\n                Categories: action.payload\n            };\n        case 'SET_DATES':\n            return{\n                ...state,\n                dates: action.payload\n            };\n        case 'SET_INTERVIEW_DATE':\n            return{\n                ...state,\n                interviewDate: action.payload\n            };\n\n        case 'POST_NEWAPP_PENDING':\n            return Object.assign({}, state, {isPending: true})\n\n        case 'POST_NEWAPP_SUCCESS':\n            return {\n                ...state,\n                applicationDetail:{\n                    companyName: '',\n                    positionName: '',\n                    pinned: false,\n                },\n                archived: false, \n                dates :[\n                    {key : 0, \n                    date: new Date(), \n                    showDate: true, \n                    completed: true}\n                ],\n            }\n        case 'POST_NEWAPP_FAILED':\n            return Object.assign({}, state, {error: action.payload, isPending: false})\n        default:\n            return state;\n    } \n}\n\nexport default addAppReducer;","import categoriesTypes from './categoriesTypes'\n\nconst INITIAL_STATE = {\n    categories : [\n        {\n        index: 0,\n        name: 'Role',\n        suggestions : [],\n        accordion: false,\n        },\n        {\n        index: 1,\n        name: 'Location',\n        suggestions : [],\n        accordion: false,\n        }\n    ]\n}\n\n\nconst categoriesReducer  = (state = INITIAL_STATE, action) =>{\n    switch(action.type){\n        case 'SET_CATEGORIES':\n            return{\n                ...state,\n                categories: action.payload\n            };\n        default:\n            return state;\n    } \n}\n\nexport default categoriesReducer;","\nconst INITIAL_STATE = {\n        //key1: interview, key2: date key3: etc...\n    applications:[],\n    isPending: false, \n    error:''\n}\n\n\nexport const progressReducer  = (state = INITIAL_STATE, action) =>{\n    switch(action.type){\n        case 'SET_APPS':\n            return{\n                ...state,\n                applications: action.payload\n            };\n        case 'REQUEST_PROGRESS_PENDING':\n            return {\n                ...state, \n                isPending: true\n            }\n        case 'REQUEST_PROGRESS_SUCCESS':\n            return {\n                applications: action.payload,\n                isPending: false   \n            }\n        case 'REQUEST_PROGRESS_FAILED':\n            return Object.assign({}, state, {error: action.payload, isPending: false})\n        \n        case 'POST_PROGRESS_PENDING':\n            return Object.assign({}, state, {isPending: true})\n\n        case 'POST_PROGRESS_SUCCESS':\n            return {\n                ...state,\n                isPending: false   \n            }\n        case 'POST_PROGRESS_FAILED':\n            return Object.assign({}, state, {error: action.payload, isPending: false})\n\n        \n        default:\n            return state;\n    } \n}\nexport default progressReducer\n\n\n// export const requestProgressReducer = (state = INITIAL_STATE, action) =>{\n//     switch(action.type){\n//         case 'REQUEST_PROGRESS_PENDING':\n//             return Object.assign({}, state, {isPending: true})\n\n//         case 'REQUEST_PROGRESS_SUCCESS':\n//             return {\n//                 applications: action.payload,\n//                 isPending: false   \n//             }\n//         case 'REQUEST_PROGRESS_SUCCESS':\n//             return Object.assign({}, state, {error: action.payload, isPending: false})\n//         default:\n//             return state;\n//     } \n// }\n// export default requestProgress\n","\nconst INITIAL_STATE = {\n        //key1: interview, key2: date key3: etc...\n    applications:[],\n    selectedTitle: '',\n    selectedButtonValue: '0',\n}\n\n\nexport const filteredProgressReducer  = (state = INITIAL_STATE, action) =>{\n    switch(action.type){\n        case 'REQUEST_PROGRESS_SUCCESS':\n        case 'UPDATE_FILTERED_PROGRESS':\n            return {\n                ...state,\n                applications: action.payload,\n            }\n        case 'UPDATE_FILTERED_PROGRESS_TITLE':\n            return {\n                ...state,\n                selectedTitle : action.payload\n            }\n        case 'UPDATE_FILTERED_PROGRESS_BUTTON_VALUE':\n            return {\n                ...state,\n                selectedButtonValue : action.payload\n            }\n            \n        default:\n            return state;\n    } \n}\nexport default filteredProgressReducer\n\n\n// export const requestProgressReducer = (state = INITIAL_STATE, action) =>{\n//     switch(action.type){\n//         case 'REQUEST_PROGRESS_PENDING':\n//             return Object.assign({}, state, {isPending: true})\n\n//         case 'REQUEST_PROGRESS_SUCCESS':\n//             return {\n//                 applications: action.payload,\n//                 isPending: false   \n//             }\n//         case 'REQUEST_PROGRESS_SUCCESS':\n//             return Object.assign({}, state, {error: action.payload, isPending: false})\n//         default:\n//             return state;\n//     } \n// }\n// export default requestProgress\n","\nconst INITIAL_STATE = {\n        //key1: interview, key2: date key3: etc...\n    application:{}\n}\n\n\nexport const ApplicationDetailReducer  = (state = INITIAL_STATE, action) =>{\n    switch(action.type){\n        case 'UPDATE_APPLICATION_DETAIL':\n            return {\n                application: action.payload,\n            }\n        default:\n            return state;\n    } \n}\nexport default ApplicationDetailReducer\n\n\n// export const requestProgressReducer = (state = INITIAL_STATE, action) =>{\n//     switch(action.type){\n//         case 'REQUEST_PROGRESS_PENDING':\n//             return Object.assign({}, state, {isPending: true})\n\n//         case 'REQUEST_PROGRESS_SUCCESS':\n//             return {\n//                 applications: action.payload,\n//                 isPending: false   \n//             }\n//         case 'REQUEST_PROGRESS_SUCCESS':\n//             return Object.assign({}, state, {error: action.payload, isPending: false})\n//         default:\n//             return state;\n//     } \n// }\n// export default requestProgress\n","import { combineReducers} from 'redux';\n\nimport addAppReducer from './addApp-reducer/addAppReducer'\nimport categoriesReducer from './categories-reducer/categoriesReducer'\nimport progressReducer from './progress-reducer/progressReducer'\nimport filteredProgressReducer from './filteredProgress-reducer/filteredProgressReducer'\nimport applicationDetailReducer from './applicationDetail-reducer/ApplicationDetailReducer'\nexport default combineReducers({\n    addApp : addAppReducer,\n    categories: categoriesReducer,\n    progress : progressReducer,\n    filteredProgress: filteredProgressReducer,\n    applicationDetail: applicationDetailReducer\n    // requestProgress : requestProgressReducer\n})","import {createStore, applyMiddleware} from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk'\nimport rootReducer from './root-reducer';\n\n\nconst middlewares = [logger, thunk];\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares))\n\nexport default store; \n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport {Provider} from 'react-redux'\nimport '@fortawesome/react-fontawesome'\n\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider> , document.getElementById('modal-window'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}